import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"modules": {
			"mod1": {
				"config": {
					"input_value": "foo",
				},
				"references": {
					"input_value": [],
				},
				"source":  "./modules/mod1",
				"version": "",
			},
			"mod2": {
				"config":     {},
				"references": {},
				"source":     "./modules/mod2",
				"version":    "",
			},
			"mod3": {
				"config":     {},
				"references": {},
				"source":     "./modules/mod3",
				"version":    "",
			},
			"mod4": {
				"config":     {},
				"references": {},
				"source":     "./modules/mod4",
				"version":    "",
			},
		},
		"outputs":   {},
		"providers": {},
		"resources": {},
		"variables": {},
	},

	"module.mod1": {
		"data":      {},
		"modules":   {},
		"outputs":   {},
		"providers": {},
		"resources": {
			"null_resource": {
				"test_mod1": {
					"config":       {},
					"provisioners": null,
					"references":   {},
				},
			},
		},
		"variables": {
			"input_value": {
				"default":     null,
				"description": "",
			},
		},
	},

	"module.mod2": {
		"data": {},
		"modules": {
			"submod1": {
				"config": {
					"input_value": "baz",
				},
				"references": {
					"input_value": [],
				},
				"source":  "./submodule1",
				"version": "",
			},
			"submod2": {
				"config": {
					"input_value": "bop",
				},
				"references": {
					"input_value": [],
				},
				"source":  "./submodule1",
				"version": "",
			},
		},
		"outputs":   {},
		"providers": {},
		"resources": {},
		"variables": {},
	},

	"module.mod2.module.submod1": {
		"data":      {},
		"modules":   {},
		"outputs":   {},
		"providers": {},
		"resources": {
			"null_resource": {
				"test_submod2": {
					"config": {
						"triggers": null,
					},
					"provisioners": null,
					"references": {
						"triggers": [],
					},
				},
			},
		},
		"variables": {
			"input_value": {
				"default":     null,
				"description": "",
			},
		},
	},

	"module.mod2.module.submod2": {
		"data":      {},
		"modules":   {},
		"outputs":   {},
		"providers": {},
		"resources": {
			"null_resource": {
				"test_submod2": {
					"config": {
						"triggers": null,
					},
					"provisioners": null,
					"references": {
						"triggers": [],
					},
				},
			},
		},
		"variables": {
			"input_value": {
				"default":     null,
				"description": "",
			},
		},
	},

	"module.mod3": {
		"data":      {},
		"modules":   {},
		"outputs":   {},
		"providers": {},
		"resources": {
			"null_resource": {
				"test_mod3": {
					"config":       {},
					"provisioners": null,
					"references":   {},
				},
			},
		},
		"variables": {},
	},

	"module.mod4": {
		"data":      {},
		"modules":   {},
		"outputs":   {},
		"providers": {},
		"resources": {
			"null_resource": {
				"test_mod4": {
					"config":       {},
					"provisioners": null,
					"references":   {},
				},
			},
		},
		"variables": {},
	},
}

module_paths = [
	[],
	[
		"mod1",
	],
	[
		"mod2",
	],
	[
		"mod2",
		"submod1",
	],
	[
		"mod2",
		"submod2",
	],
	[
		"mod3",
	],
	[
		"mod4",
	],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
